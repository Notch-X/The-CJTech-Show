@inject HttpClient _client
<h3>Vendors</h3>

<EditForm Model="@vendorModel" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <fieldset disabled="@Disabled">

        <div class="form-group">
            <label>Vendor Name: </label>
            <div>
                <InputText @bind-Value="@vendorModel.VendorName" class="form-control" />
                <ValidationMessage For="@(() => vendorModel.VendorName)" />
            </div>
        </div>

        <div class="form-group">
            <label>Contact Details: </label>
            <div>
                <InputText @bind-Value="@vendorModel.VendorContactDetails" class="form-control" />
                <ValidationMessage For="@(() => vendorModel.VendorContactDetails)" />
            </div>
        </div>

        <div class="form-group">
            <label>Booth Number: </label>
            <div>
                <InputText @bind-Value="@vendorModel.BoothNumber" class="form-control" />
                <ValidationMessage For="@(() => vendorModel.BoothNumber)" />
            </div>
        </div>
        <div class="form-group">
            <label>Description: </label>
            <div>
                <InputText @bind-Value="@vendorModel.VendorDescription" class="form-control" />
                <ValidationMessage For="@(() => vendorModel.VendorDescription)" />
            </div>
        </div>
        <div class="form-group">
            <label>Products: </label>
            <div>
                <InputText @bind-Value="@vendorModel.Products" class="form-control" />
                <ValidationMessage For="@(() => vendorModel.Products)" />
            </div>
        </div>
        <div class="form-group">
            <label>Social Media: </label>
            <div>
                <InputText @bind-Value="@vendorModel.SocialMedia" class="form-control" />
                <ValidationMessage For="@(() => vendorModel.SocialMedia)" />
            </div>
        </div>
    </fieldset>

    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }
    </EditForm>

    @code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Vendor vendorModel { get; set; } = new Vendor();
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback<EditContext> OnValidSubmit { get; set; }
    private IList<Vendor>? Vendors;

    protected async override Task OnInitializedAsync()
    {
        Vendors = await _client.GetFromJsonAsync<List<Vendor>>($"{Endpoints.VendorsEndpoint}");
    }
}
